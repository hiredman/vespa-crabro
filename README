# vespa-crabro

dirt simple distributed message queues for clojure, built on hornetq

## Usage

vespa.crabro> (def server (create-server))
#'vespa.crabro/server
vespa.crabro> (def mb (message-bus (cookie server)))
#'vespa.crabro/mb
vespa.crabro> (send-to mb "foo" {:x 1})
nil
vespa.crabro> (receive-from mb "foo" println)
{:x 1}
nil
vespa.crabro> (def mb2 (.clone mb))
#'vespa.crabro/mb2
vespa.crabro> (send-to mb2 "foo" {:x 2})
nil
vespa.crabro> (receive-from mb "foo" println)
{:x 2}
nil
vespa.crabro> 

the "cookie" is a base64 encoded serialized clojure map of connection parameters

## Todo

* Simple Server Entry Point
  - write cookie to user.home/.vespa-cookie
  - reuse existing cookie in that location
  - support some kind of -D to overide
* Simple Client Entry Point
  - reads cookie from user.home/.vaspa-cookie
* Decompose and Expose
  - give access to hornetq internals
  - make easy ramp up from vespa-crabro to using hornetq api directly
* Split up crabro.clj in to functional units in their own namespaces

## License

Copyright (C) 2011 Kevin Downey

Distributed under the Eclipse Public License, the same as Clojure.
